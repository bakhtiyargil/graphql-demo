plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'az.baxtiyargil'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    implementation 'com.graphql-java-kickstart:graphql-java-tools:11.0.1'
    implementation 'com.graphql-java:graphql-java-extended-scalars:19.0'

    implementation 'com.blazebit:blaze-persistence-core-api:1.6.11'
    implementation 'com.blazebit:blaze-persistence-core-impl:1.6.11'
    implementation 'com.blazebit:blaze-persistence-integration-graphql:1.6.11'
    implementation 'com.blazebit:blaze-persistence-integration-spring-data-2.7:1.6.11'
    implementation 'com.blazebit:blaze-persistence-integration-hibernate-5.6:1.6.11'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
